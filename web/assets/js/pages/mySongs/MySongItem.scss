@use "@abstractStyle" as g;
@use "@mixins/button.scss" as button;

.my-song-item
{
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: 150px auto auto;

    background-color: map-get($map: g.$primary, $key: "light");
    
    width: 100%;

    margin-bottom: 20px;
    box-shadow: 0px 2px 4px rgba(map-get($map: g.$primary, $key: "dark"), .7);

    @media (min-width: map-get($map: g.$breakPoint, $key: "S")) {
        grid-template-columns: 150px auto 120px;
        height: 150px;
    }

    &--image
    {
        height: 100%;
        width: 100%;
        object-fit: cover;
    }

    &--info
    {
        color: g.$white;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;

        &--title
        {
            font-size: 30px;
            font-family: g.$fontSubtitle;
            font-weight: bold;
        }

        &--duration
        {
            font-size: 20px;
            font-family: g.$fontSubtitle;
        }

        &--song
        {
            width: 80%;
            position: relative;

            &--play
            {
                & > *:nth-child(2)
                {
                    margin-left: 10px;
                }

                &--button
                {
                    background-color: initial;
                    border: none;
                    color: inherit;
                    font-size: inherit;
                }
            }

            &--volume
            {
                position: absolute;
                right: 0;
                top: 0;

                display: grid;
                grid-template-columns: 20px auto;
                align-items: center;
                column-gap: 10px;

                &--bar
                {
                    background-color: map-get($map: g.$primary, $key: "regular");
                    width: 50px;
                    height: 5px;

                    &--value
                    {
                        width: 0;
                        background-color: g.$white;
                        height: 100%;
                    }
                }

                &--button
                {
                    background-color: initial;
                    border: none;
                    color: inherit;
                    font-size: inherit;
                }
            }

            &--progressBar
            {
                width: 100%;
                background-color: g.$white;
                height: 10px;
                border-radius: 15px;
                margin-top: 10px;
                overflow: hidden;

                &--value
                {
                    background-color: map-get($map: g.$secondary, $key: "regular");
                    height: 100%;
                    width: 0%;
                }
            }
        }
    }

    &--action
    {
        display: grid;
        grid-template-rows: auto auto;
        row-gap: 10px;
        text-align: center;
        align-content: center;
        padding-top: 20px;
        font-family: g.$fontSubtitle;
        font-weight: bold;

        @media (min-width: map-get($map: g.$breakPoint, $key: "S")) {
            padding-top: 0;
            justify-content: center;
        }

        &--edit
        {
            @include button.secondary_button();
        }

        &--delete
        {
            @include button.primary_button();
        }

        &--stats
        {
            @include button.primary_light_button();
        }

        &--edit,&--delete,&--stats
        {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 40px;
            padding: 10px;
            font-weight: bold;
            font-family: inherit;
            font-size: inherit;
        }
    }
}